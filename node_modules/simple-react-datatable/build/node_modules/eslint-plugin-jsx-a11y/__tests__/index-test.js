'use strict';

var _assert = require('assert');

var _assert2 = _interopRequireDefault(_assert);

var _fs = require('fs');

var _fs2 = _interopRequireDefault(_fs);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _src = require('../src');

var _src2 = _interopRequireDefault(_src);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-env jest */
/* eslint global-require: 0 */

var rules = _fs2.default.readdirSync(_path2.default.resolve(__dirname, '../src/rules/')).map(function (f) {
  return _path2.default.basename(f, '.js');
});

describe('all rule files should be exported by the plugin', function () {
  rules.forEach(function (ruleName) {
    it('should export ' + ruleName, function () {
      _assert2.default.equal(_src2.default.rules[ruleName], require(_path2.default.join('../src/rules', ruleName)) // eslint-disable-line
      );
    });
  });
});

describe('configurations', function () {
  it('should export a \'recommended\' configuration', function () {
    (0, _assert2.default)(_src2.default.configs.recommended);
  });
});

describe('schemas', function () {
  rules.forEach(function (ruleName) {
    it(ruleName + ' should export a schema with type object', function () {
      var rule = require(_path2.default.join('../src/rules', ruleName)); // eslint-disable-line
      var schema = rule.meta && rule.meta.schema && rule.meta.schema[0];
      var type = schema.type;


      _assert2.default.deepEqual(type, 'object');
    });
  });
});