'use strict';

var _eslint = require('eslint');

var _parserOptionsMapper = require('../../__util__/parserOptionsMapper');

var _parserOptionsMapper2 = _interopRequireDefault(_parserOptionsMapper);

var _noAccessKey = require('../../../src/rules/no-access-key');

var _noAccessKey2 = _interopRequireDefault(_noAccessKey);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// -----------------------------------------------------------------------------
// Tests
// -----------------------------------------------------------------------------

var ruleTester = new _eslint.RuleTester(); /* eslint-env jest */
/**
 * @fileoverview Enforce no accesskey attribute on element.
 * @author Ethan Cohen
 */

// -----------------------------------------------------------------------------
// Requirements
// -----------------------------------------------------------------------------

var expectedError = {
  message: 'No access key attribute allowed. Inconsistencies ' + 'between keyboard shortcuts and keyboard comments used by screenreader ' + 'and keyboard only users create a11y complications.',
  type: 'JSXOpeningElement'
};

ruleTester.run('no-access-key', _noAccessKey2.default, {
  valid: [{ code: '<div />;' }, { code: '<div {...props} />' }, { code: '<div accessKey={undefined} />' }, { code: '<div accessKey={`${undefined}`} />' }, { code: '<div accessKey={`${undefined}${undefined}`} />' }].map(_parserOptionsMapper2.default),
  invalid: [{ code: '<div accesskey="h" />', errors: [expectedError] }, { code: '<div accessKey="h" />', errors: [expectedError] }, { code: '<div accessKey="h" {...props} />', errors: [expectedError] }, { code: '<div acCesSKeY="y" />', errors: [expectedError] }, { code: '<div accessKey={"y"} />', errors: [expectedError] }, { code: '<div accessKey={`${y}`} />', errors: [expectedError] }, {
    code: '<div accessKey={`${undefined}y${undefined}`} />',
    errors: [expectedError]
  }, { code: '<div accessKey={`This is ${bad}`} />', errors: [expectedError] }, { code: '<div accessKey={accessKey} />', errors: [expectedError] }].map(_parserOptionsMapper2.default)
});