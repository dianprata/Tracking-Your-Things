'use strict';

var _eslint = require('eslint');

var _parserOptionsMapper = require('../../__util__/parserOptionsMapper');

var _parserOptionsMapper2 = _interopRequireDefault(_parserOptionsMapper);

var _noOnchange = require('../../../src/rules/no-onchange');

var _noOnchange2 = _interopRequireDefault(_noOnchange);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// -----------------------------------------------------------------------------
// Tests
// -----------------------------------------------------------------------------

var ruleTester = new _eslint.RuleTester(); /* eslint-env jest */
/**
 * @fileoverview Enforce usage of onBlur over onChange on select menus for accessibility.
 * @author Ethan Cohen
 */

// -----------------------------------------------------------------------------
// Requirements
// -----------------------------------------------------------------------------

var expectedError = {
  message: 'onBlur must be used instead of onchange, unless absolutely necessary and it ' + 'causes no negative consequences for keyboard only or screen reader users.',
  type: 'JSXOpeningElement'
};

ruleTester.run('no-onchange', _noOnchange2.default, {
  valid: [{ code: '<select onBlur={() => {}} />;' }, { code: '<select onBlur={handleOnBlur} />;' }, { code: '<option />;' }, { code: '<option onBlur={() => {}} onChange={() => {}} />;' }, { code: '<option {...props} />' }, { code: '<input onChange={() => {}} />;' }, { code: '<input onChange={handleOnChange} />;' }, { code: '<input />;' }, { code: '<input onChange={() => {}} onChange={() => {}} />;' }, { code: '<input {...props} />' }].map(_parserOptionsMapper2.default),
  invalid: [{ code: '<select onChange={() => {}} />;', errors: [expectedError] }, { code: '<select onChange={handleOnChange} />;', errors: [expectedError] }, { code: '<option onChange={() => {}} />', errors: [expectedError] }, { code: '<option onChange={() => {}} {...props} />', errors: [expectedError] }].map(_parserOptionsMapper2.default)
});