'use strict';

var _eslint = require('eslint');

var _parserOptionsMapper = require('../../__util__/parserOptionsMapper');

var _parserOptionsMapper2 = _interopRequireDefault(_parserOptionsMapper);

var _clickEventsHaveKeyEvents = require('../../../src/rules/click-events-have-key-events');

var _clickEventsHaveKeyEvents2 = _interopRequireDefault(_clickEventsHaveKeyEvents);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// -----------------------------------------------------------------------------
// Tests
// -----------------------------------------------------------------------------

var ruleTester = new _eslint.RuleTester(); /* eslint-env jest */
/**
 * @fileoverview Enforce a clickable non-interactive element has at least 1 keyboard event listener.
 * @author Ethan Cohen
 */

// -----------------------------------------------------------------------------
// Requirements
// -----------------------------------------------------------------------------

var errorMessage = 'Visible, non-interactive elements with click handlers' + ' must have at least one keyboard listener.';

var expectedError = {
  message: errorMessage,
  type: 'JSXOpeningElement'
};

ruleTester.run('click-events-have-key-events', _clickEventsHaveKeyEvents2.default, {
  valid: [{ code: '<div onClick={() => void 0} onKeyDown={foo}/>;' }, { code: '<div onClick={() => void 0} onKeyUp={foo} />;' }, { code: '<div onClick={() => void 0} onKeyPress={foo}/>;' }, { code: '<div onClick={() => void 0} onKeyDown={foo} onKeyUp={bar} />;' }, { code: '<div onClick={() => void 0} onKeyDown={foo} {...props} />;' }, { code: '<div className="foo" />;' }, { code: '<div onClick={() => void 0} aria-hidden />;' }, { code: '<div onClick={() => void 0} aria-hidden={true} />;' }, { code: '<div onClick={() => void 0} aria-hidden={false} onKeyDown={foo} />;' }, {
    code: '<div onClick={() => void 0} onKeyDown={foo} aria-hidden={undefined} />;'
  }, { code: '<input type="text" onClick={() => void 0} />' }, { code: '<input onClick={() => void 0} />' }, { code: '<button onClick={() => void 0} className="foo" />' }, { code: '<option onClick={() => void 0} className="foo" />' }, { code: '<select onClick={() => void 0} className="foo" />' }, { code: '<textarea onClick={() => void 0} className="foo" />' }, { code: '<a onClick={() => void 0} href="http://x.y.z" />' }, { code: '<a onClick={() => void 0} href="http://x.y.z" tabIndex="0" />' }, { code: '<input onClick={() => void 0} type="hidden" />;' }, { code: '<TestComponent onClick={doFoo} />' }, { code: '<Button onClick={doFoo} />' }].map(_parserOptionsMapper2.default),
  invalid: [{ code: '<div onClick={() => void 0} />;', errors: [expectedError] }, {
    code: '<div onClick={() => void 0} role={undefined} />;',
    errors: [expectedError]
  }, { code: '<div onClick={() => void 0} {...props} />;', errors: [expectedError] }, { code: '<section onClick={() => void 0} />;', errors: [expectedError] }, { code: '<main onClick={() => void 0} />;', errors: [expectedError] }, { code: '<article onClick={() => void 0} />;', errors: [expectedError] }, { code: '<header onClick={() => void 0} />;', errors: [expectedError] }, { code: '<footer onClick={() => void 0} />;', errors: [expectedError] }, {
    code: '<div onClick={() => void 0} aria-hidden={false} />;',
    errors: [expectedError]
  }, { code: '<a onClick={() => void 0} />', errors: [expectedError] }, { code: '<a tabIndex="0" onClick={() => void 0} />', errors: [expectedError] }].map(_parserOptionsMapper2.default)
});