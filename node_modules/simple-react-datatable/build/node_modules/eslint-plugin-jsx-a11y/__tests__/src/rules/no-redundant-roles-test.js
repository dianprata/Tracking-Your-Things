'use strict';

var _eslint = require('eslint');

var _parserOptionsMapper = require('../../__util__/parserOptionsMapper');

var _parserOptionsMapper2 = _interopRequireDefault(_parserOptionsMapper);

var _noRedundantRoles = require('../../../src/rules/no-redundant-roles');

var _noRedundantRoles2 = _interopRequireDefault(_noRedundantRoles);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// -----------------------------------------------------------------------------
// Tests
// -----------------------------------------------------------------------------

var ruleTester = new _eslint.RuleTester(); /* eslint-env jest */
/**
 * @fileoverview Enforce explicit role property is not the
 * same as implicit default role property on element.
 * @author Ethan Cohen <@evcohen>
 */

// -----------------------------------------------------------------------------
// Requirements
// -----------------------------------------------------------------------------

var expectedError = function expectedError(element, implicitRole) {
  return {
    message: 'The element ' + element + ' has an implicit role of ' + implicitRole + '. Defining this explicitly is redundant and should be avoided.',
    type: 'JSXOpeningElement'
  };
};

ruleTester.run('no-redundant-roles', _noRedundantRoles2.default, {
  valid: [{ code: '<div />;' }, { code: '<button role="main" />' }, { code: '<MyComponent role="button" />' }, { code: '<button role={`${foo}button`} />' }].map(_parserOptionsMapper2.default),
  invalid: [{ code: '<button role="button" />', errors: [expectedError('button', 'button')] }, { code: '<body role="DOCUMENT" />', errors: [expectedError('body', 'document')] }, { code: '<button role={`${undefined}button`} />', errors: [expectedError('button', 'button')] }].map(_parserOptionsMapper2.default)
});